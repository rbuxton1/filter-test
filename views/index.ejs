<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <script src="face-api.js"></script>
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <title>Face API test</title>
    <style>
      video, canvas {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
      }
    </style>
    <script>
      const sunglasses = new Image();

      async function onPlay(){
        const videoEl = $("#inputVideo").get(0);

        if(videoEl.paused || videoEl.ended)
          return setTimeout(() => onPlay());

        const options = new faceapi.TinyFaceDetectorOptions({ inputSize: 128, scoreThreshold: 0.5 })
        const result = await faceapi.detectSingleFace(videoEl, options).withFaceLandmarks();

        if(result){
          const canvas = $("#overlay").get(0);
          const ctx = canvas.getContext('2d');
          const dims = faceapi.matchDimensions(canvas, videoEl, true);
          //faceapi.draw.drawDetections(canvas, result);
          //faceapi.draw.drawFaceLandmarks(canvas, faceapi.resizeResults(result, dims));

          var leftEye = result.landmarks.getLeftEye();
          var rightEye = result.landmarks.getRightEye();
          var box = result.detection.box;

          //sohcahtoa
          var angle = Math.tan((rightEye[2].y - leftEye[0].y) / (rightEye[2].x - leftEye[0].x));
          var yPadding = box.height / 10;
          console.log(`hangulation: ${angle} RAD`);
          ctx.translate(box.x + (box.width/2), box.y + (box.height / 2) + yPadding);
          ctx.rotate(angle);
          ctx.drawImage(sunglasses, -box.width / 2, -box.height/2, box.width, box.height/2);
          ctx.rotate(-angle);
          ctx.translate(-(box.x + (box.width/2)), -(box.y + (box.height / 2) + yPadding));

          //ctx.strokeRect(leftEye[0].x, leftEye[0].y, 10, 10);
          //ctx.strokeRect(rightEye[3].x, rightEye[3].y, 10, 10);
        }

        setTimeout(() => onPlay());
      }

      async function run() {
        console.log("loading model");
        // load the models
        await faceapi.loadTinyFaceDetectorModel('/');
        //await faceapi.loadFaceLandmarkTinyModel('/');
        await faceapi.loadFaceLandmarkModel('/');
        console.log("loaded!");

        sunglasses.src = "/sunglasses.png";

        // try to access users webcam and stream the images
        // to the video element
        const stream = await navigator.mediaDevices.getUserMedia({ video: {} })
        const videoEl = $('#inputVideo').get(0)
        videoEl.srcObject = stream;
      }

      function updateResults() {}

      $(document).ready(function() {
        //initFaceDetectionControls();
        run();
      });
    </script>
  </head>
  <body>
    <video onloadedmetadata="onPlay(this)" id="inputVideo" autoplay muted playsinline></video>
    <canvas id="overlay" />
  </body>
</html>
